// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/filecoin-project/venus-auth/jwtclient (interfaces: IAuthClient)

// Package mock_jwtclient is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	auth "github.com/filecoin-project/venus-auth/auth"
	gomock "github.com/golang/mock/gomock"
)

// MockIAuthClient is a mock of IAuthClient interface.
type MockIAuthClient struct {
	ctrl     *gomock.Controller
	recorder *MockIAuthClientMockRecorder
}

// MockIAuthClientMockRecorder is the mock recorder for MockIAuthClient.
type MockIAuthClientMockRecorder struct {
	mock *MockIAuthClient
}

// NewMockIAuthClient creates a new mock instance.
func NewMockIAuthClient(ctrl *gomock.Controller) *MockIAuthClient {
	mock := &MockIAuthClient{ctrl: ctrl}
	mock.recorder = &MockIAuthClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAuthClient) EXPECT() *MockIAuthClientMockRecorder {
	return m.recorder
}

// GetUser mocks base method.
func (m *MockIAuthClient) GetUser(arg0 *auth.GetUserRequest) (*auth.OutputUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUser", arg0)
	ret0, _ := ret[0].(*auth.OutputUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUser indicates an expected call of GetUser.
func (mr *MockIAuthClientMockRecorder) GetUser(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUser", reflect.TypeOf((*MockIAuthClient)(nil).GetUser), arg0)
}

// GetUserByMiner mocks base method.
func (m *MockIAuthClient) GetUserByMiner(arg0 *auth.GetUserByMinerRequest) (*auth.OutputUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserByMiner", arg0)
	ret0, _ := ret[0].(*auth.OutputUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserByMiner indicates an expected call of GetUserByMiner.
func (mr *MockIAuthClientMockRecorder) GetUserByMiner(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserByMiner", reflect.TypeOf((*MockIAuthClient)(nil).GetUserByMiner), arg0)
}

// GetUserBySigner mocks base method.
func (m *MockIAuthClient) GetUserBySigner(arg0 string) ([]*auth.OutputUser, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUserBySigner", arg0)
	ret0, _ := ret[0].([]*auth.OutputUser)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUserBySigner indicates an expected call of GetUserBySigner.
func (mr *MockIAuthClientMockRecorder) GetUserBySigner(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUserBySigner", reflect.TypeOf((*MockIAuthClient)(nil).GetUserBySigner), arg0)
}

// RegisterSigners mocks base method.
func (m *MockIAuthClient) RegisterSigners(arg0 string, arg1 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RegisterSigners", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RegisterSigners indicates an expected call of RegisterSigners.
func (mr *MockIAuthClientMockRecorder) RegisterSigners(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RegisterSigners", reflect.TypeOf((*MockIAuthClient)(nil).RegisterSigners), arg0, arg1)
}

// UnregisterSigners mocks base method.
func (m *MockIAuthClient) UnregisterSigners(arg0 string, arg1 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UnregisterSigners", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UnregisterSigners indicates an expected call of UnregisterSigners.
func (mr *MockIAuthClientMockRecorder) UnregisterSigners(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UnregisterSigners", reflect.TypeOf((*MockIAuthClient)(nil).UnregisterSigners), arg0, arg1)
}

// VerifyUsers mocks base method.
func (m *MockIAuthClient) VerifyUsers(arg0 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "VerifyUsers", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// VerifyUsers indicates an expected call of VerifyUsers.
func (mr *MockIAuthClientMockRecorder) VerifyUsers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "VerifyUsers", reflect.TypeOf((*MockIAuthClient)(nil).VerifyUsers), arg0)
}
